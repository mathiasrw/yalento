rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

 match /User/{userId} {
        allow read: if request.auth.uid == resource.data.__uuid;
        allow write: if request.auth.uid == userId;
    }

    match /{model}/data/{entity}/{id} {

          function evaluateEntityPermissions(entity, operation, allowIfNotDefined) {
              return (entity.data.keys().hasAny([operation]) == false && allowIfNotDefined) || entity.data[operation].get(request.auth.uid, false) == true
           }


     function evaluateDocumentPermissions() {
              return resource == null || (resource.data.__owner.get('EVERYBODY', false) == true || resource.data.__owner.get(request.auth.uid, false) == true)
           }


      allow get: if evaluateEntityPermissions(get(/databases/$(database)/documents/$(model)/permissions), 'get', true) && evaluateDocumentPermissions()
      allow list: if evaluateEntityPermissions(get(/databases/$(database)/documents/$(model)/permissions), 'list', true) && evaluateDocumentPermissions()
      allow create: if evaluateEntityPermissions(get(/databases/$(database)/documents/$(model)/permissions), 'create', request.auth.uid != null) && evaluateDocumentPermissions()
      allow update: if evaluateEntityPermissions(get(/databases/$(database)/documents/$(model)/permissions), 'update', false) && evaluateDocumentPermissions()

    }
  }
}